{
  "name": "Aging Database",
  "tagline": "Base to provide researchers robust and high quality samples of face variations due to aging.",
  "body": "**Aging Base**\r\n===============\r\nThe main goal of this database is to provide researchers robust and high quality samples of face variations due to aging, and enable them to use this content in face aging and recognition works.\r\n\r\nThe base is composed by daily photo experiments published as videos on Youtube. The base itself does not store any of those videos, instead it keeps some information about them (such as url, title, age) and provides the users with tools to easily access and use the experiments.\r\n\r\n[Exemplo de video]\r\n\r\nThe fact that the videos are not stored in the project repository plays an important role to secure that at any time the content owner removes or privates the video on Youtube the same will happen with the access through the base.\r\n\r\n\r\n**Usage**\r\n--------------------------\r\nThe information about the aging samples are stored in the `base.json` file. Besides the videos information, some tools are provided so that the videos can be processed. In the end you will have organized and processed face pictures through the years and face landmarks information for every picture.\r\n\r\nThere are basicly three steps in this process. All of them consists among others of scripts in python, so you need to have python installed.\r\n\r\n#### Python\r\n\r\nThe latest versions of CentOS, Fedora, Redhat Enterprise (RHEL) and Ubuntu come with Python 2.7 out of the box. If it's not your case, you can follow [this](http://stackoverflow.com/questions/6630873/how-to-download-python-from-command-line).\r\n\r\n## Tasks:\r\n\r\n[image explaining]\r\n \r\n- Download videos\r\n- Extract unique frames\r\n- Filter frames with face and normalize them.\r\n\r\nTo perform any of those tasks run, from inside the base main folder `python main.py <task_name> <filters> <options>`\r\n\r\n### Download task\r\n\r\nThis task is to download the videos listed in the base from the Youtube\r\n\r\nUsage: `python main.py download <filters> <options>`\r\n\r\nrequirements: The videos are downloaded using the youtube-dl program.\r\n\r\n#### youtube-dl\r\nFollow [these](http://rg3.github.io/youtube-dl/download.html) structions to install youtube.dl. To update it use `youtube-dl -U`\r\n\r\n### Extract task\r\n\r\nThis task extracts distinct frames from videos already downloaded\r\n\r\nUsage: `python main.py extract <filters> <options>`\r\n\r\nrequirements: ffmpeg to extract frames.\r\n\r\n#### ffmpeg\r\n\r\nDownload [source](https://www.ffmpeg.org/olddownload.html), it must be the 1.2.12 \"Magic\" version. Extract using `tar -jxvf ffmpeg-1.2.12.tar.bz2` and follow the steps described in the INSTALL file.\r\n\r\n### Normalize task\r\n\r\nIt will, f perform normalization to each frame that contain only one face. The normalization consists in detect face landmarks, face rotation to align eyes center and clip the image for an almost face only region. The processed frames are stored in a `processed` folder inside the experiment specific folder.\r\n\r\nIn this task the face lankmarks detected for every frame are stored in a json file.\r\n\r\nUsage: `python main.py normalize <filters> <options>`\r\n\r\nRequiriments: Scons, g++/gcc, OpenCV, Flandmark.\r\n\r\n#### SCons\r\n[Download](http://scons.org/pages/download.html) and extract scons. inside its directory run `python setup.py install`\r\n\r\n#### g++/gcc\r\n\r\nYou should already have these compilers installed, to check that run `gcc -v` or `g++ -v`. If it's not, install using:\r\n\r\n~~~~\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\nsudo apt-get install build-essential\r\n~~~~\r\n\r\nTo save face landmarks in a json file it's required to have GCC 4.9 or latter. Ubuntu users can follow [these](http://askubuntu.com/questions/466651/how-do-i-use-the-latest-gcc-on-ubuntu) instructions to upload GCC.\r\n\r\n#### OpenCV\r\n\r\nYou can follow [this Gist](https://gist.github.com/dynamicguy/3d1fce8dae65e765f7c4) to install OpenCV 2.4.11 in a linux.\r\n\r\n#### flandmark\r\n\r\nTo install flandmark you can download the zip from [GitHub](https://github.com/uricamic/flandmark), extract and follow the steps in the **INSTALL** file.\r\n\r\n\r\n### Filters and Options\r\n\r\nFor the three tasks some filters can be used, they are based in the information of the experiments that are stored in the base. All filters are explained below.\r\n\r\n- Videos\r\n\r\nOperates the task over the videos with ids specified\r\n~~~\r\n--videos or -v 10 5 15 25\r\n~~~\r\n\r\nOperates the task over the videos with id `x` to `y`.\r\n~~~\r\n--interval or -i x y\r\n~~~\r\n\r\nOperates the task over the videos with the correspondent url.\r\n~~~\r\n--url or -u <video_url>\r\n~~~\r\n\r\n- Age\r\n\r\nOperates the task over the videos that the estimated age range cross the age range specified by `min_age` and `max_age`.\r\n~~~\r\n--age-interval or -ai <min_age> <max_age>\r\n~~~\r\n\r\n- Gender\r\n\r\n~~~\r\n--male or -m\r\n--female or -f\r\n~~~\r\n\r\n- Ethnicity\r\n\r\n~~~\r\n--white or -w\r\n--black or -b\r\n--asian or -a\r\n~~~\r\n\r\n- Facial Hair\r\n\r\n~~~\r\n--facial-hair or -fh\r\n--no-facial-hair or -nfh\r\n~~~\r\n\r\nThe `--remove or -rm` option can be used in the extract and normalize tasks to operate in videos and frames already processed.\r\n\r\nFor the normalization task, some other options are provided\r\n- `--show` Open widows to show the process for each frame, while it's been performed.\r\n- `--no-rotation` Does not perform face rotation.\r\n- `--draw-landmarks` Draw landmarks in the processed frames.\r\n- `--draw-face-rectangle` Draw the face delimiter rectangle in the processed frames.\r\n\r\n**Statistics**\r\n--------------------------\r\n\r\n**License**\r\n--------------------------\r\n\r\n**Collaborative database**\r\n--------------------------\r\n\r\n**Extras**\r\n--------------------------\r\n- [ ] Original article\r\n- [ ] Other works\r\n- [ ] Youtube Crawler",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}